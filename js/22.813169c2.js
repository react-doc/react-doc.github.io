(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{540:function(n,o){n.exports='\x3c!--\ntitle: 配置文件\nsort: 4\n--\x3e\n\n配置文件可以添加设置网站内容和主题等\n\n## 配置文件添加\n\n配置可以通过 `package.json` 文件以 JSON 的形式添加，也可以通过，在根目录下添加 `.rdocrc.json` 文件，将配置内容存入该文件中。\n\n## 配置说明\n\n在 `package.json` 中添加配置\n\n```diff\n{\n  "name": "doc",\n  "version": "1.0.0",\n  "scripts": {\n    "deploy": "rdoc --publish <your repo url>",\n    "build": "rdoc -d home,introduce --clean --build",\n    "start": "rdoc -d home,introduce --clean"\n  },\n+  "rdoc": {\n+    "theme": "rdoc-theme-load-react",\n+    "favicon": "./assets/favicon.ico",\n+    "logo": "./assets/rdoc.logo.svg",\n+    "react_modules": {\n+      "Hotkeys": "react-hot-keys"\n+    }\n+  },\n  "dependencies": {\n    "rdoc": "1.4.x",\n+    "rdoc-theme-load-react": "^1.1.0",\n+    "react-hot-keys": "^1.1.0"\n  }\n}\n```\n\n在 `.rdocrc.json` 中添加配置。\n\n```json\n{\n  "title": "Rdoc title",\n  "theme": "rdoc-theme-load-react",\n  "favicon": "./assets/favicon.ico",\n  "logo": "./assets/rdoc.logo.svg",\n  "react_modules": {\n    "Hotkeys": "react-hot-keys"\n  }\n}\n```\n\n⚠️注意：  \n1. 优先读取 `.rdocrc.json` 配置。  \n2. 两种配置只有一种起作用。  \n\n### title\n\n设置默认网页标题内容。\n\n```html\n<title>Rdoc title</title>\n```\n\n### favicon\n\n默认显示 `rdoc` 的图标，自定义 `favicon` 需要自己生成一个图标命名为 `favicon.ico` 放在项目的根目录自动识别。添加配置，可以指定不同文件名和路径下的 `ico` 文件。\n\n### logo\n\n默认显示 `rdoc` 的图标，自定义 `logo` 需要自己生成一个图标命名为 `logo.svg` 放在项目的根目录自动识别。添加配置，可以指定不同文件名和路径下的 `svg` 文件。\n\n### theme\n\n默认使用 `rdoc` 的默认主题，你可以通过这个配置指定一个主题，同时你可以自定义自己的主题，这里有个实例 [rdoc-theme-load-react](https://github.com/react-doc/rdoc-theme-load-react)，可以参照这个实例进行更改。\n\n> ⚠️注意事项：主题必须以 rdoc-theme- 开头，否则会报错。\n\n### react_modules\n\n这个参数是一个特定参数，需求是在制作主题的时候，你的主题需要预览 React 实例，实例还需要加载一些未知的第三方 React 组件，这个时候你需要在你的 Markdown 项目中安装你需要的 React 组件，在配置中指定你的组件，在预览实例中你就可以引用该组件了。\n\n> ⚠️注意：还在研究实现方式。\n'}}]);